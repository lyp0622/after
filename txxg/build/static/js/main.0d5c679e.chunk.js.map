{"version":3,"sources":["components/Tip.module.scss","components/Header.module.scss","components/Truth.module.scss","components/Area.module.scss","components/Trace.module.scss","services/index.ts","components/Header.tsx","components/Area.tsx","components/Trace.tsx","components/Hospital.tsx","components/Truth.tsx","components/Tip.tsx","components/News.tsx","components/Chart.tsx","components/Map.tsx","views/App.tsx","index.tsx","components/News.module.scss","components/Hospital.module.scss"],"names":["module","exports","factHost","getHospital","arr","axios","post","service","args","req","province","func","context","channel","Hospital","props","console","log","total","t1","lastUpdateTime","startDate","Date","replace","minutesLevel","getTime","minutes","Math","floor","className","styles","imgs","src","alt","f","box","a","a2","chinaAdd","confirm","a3","chinaTotal","a1","b","b2","suspect","b3","b1","c","c2","heal","c3","c1","d","d2","dead","d3","d1","Area","areaTree","useState","slice","map","item","index","drr","chianList","uchi","tips","nav","add","length","children","key","placeArea","onClick","expandProvince","name","blue","today","active","activeIndex","val","ind","moveNavLast","abroadList","up_tips","datas","hw_confirm","hw_dead","abroad","no_sharp","Trace","trace","setTrace","useEffect","Promise","resolve","reject","jsonp","err","data","then","res","JSON","parse","sort","time","news","titleWarp","sectionTitle","hotzhuizhong","timelineMore","timeLine","singleNew","timeIcon","times","pass","newest","newsBox","title","desc","source","provinces","setProvinces","setdata","code","rsp","info","citys","healthIcon","hospital","hotelItemWrap","hotelProvince","provinceName","newProvinces","activeCount","count","hotelCity","TransitionEvent","cityName","Truth","params","page","getTruth","Tip","lrr","fanghu_icon","fanghu_title","lr","fanghu_item_point","fanghu_item_text","rr","fanghu_item","ProvinceList","News","setProvince","items","setItems","getNews","get","errno","curIndex","findIndex","curPro","curPoo","provinceHtml","push","value","wrap","tit","id","onChange","e","target","changeArea","q","num","l1","l2","l3","l4","k","kx","tabsharebox","tabsharebtn","scale","type","dayAddList","dayList","dayDeadList","chinaDayAddList","forEach","date","chinaDayList","height","forceFit","label","formatter","split","crosshairs","position","size","color","shape","style","stroke","lineWidth","that","window","Highcharts","Map","colorAxis","dataClasses","from","to","series","countryData","dataLabels","enabled","format","mapData","maps","joinBy","width","App","setTotal","setAreaTree","setDayList","setDayAddList","setCountryData","Header","Chart","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0d5c679e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"box\":\"Tip_box__Y6A34\",\"fanghu_item\":\"Tip_fanghu_item__2dTEJ\",\"lr\":\"Tip_lr__2peT_\",\"lrr\":\"Tip_lrr__28jW-\",\"rr\":\"Tip_rr__6q6nh\",\"fanghu_item_point\":\"Tip_fanghu_item_point__irpLj\",\"fanghu_icon\":\"Tip_fanghu_icon__3g1Rp\",\"fanghu_item_text\":\"Tip_fanghu_item_text__q25dN\",\"fanghu_title\":\"Tip_fanghu_title__3W92a\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"imgs\":\"Header_imgs__2U_Zj\",\"box\":\"Header_box__3xBqE\",\"f\":\"Header_f__1qfKS\",\"a\":\"Header_a__16jzc\",\"a1\":\"Header_a1__Hsb1X\",\"a2\":\"Header_a2__8KnU6\",\"a3\":\"Header_a3__uHBqU\",\"b\":\"Header_b__1aWCk\",\"b1\":\"Header_b1__4-Q8O\",\"b2\":\"Header_b2__txLRy\",\"b3\":\"Header_b3__1mELa\",\"c\":\"Header_c__VWiyd\",\"c1\":\"Header_c1__1Du0G\",\"c2\":\"Header_c2__3vZOJ\",\"c3\":\"Header_c3__2zpBn\",\"d\":\"Header_d__2zMA-\",\"d1\":\"Header_d1__ZBJpF\",\"d2\":\"Header_d2__38MZ2\",\"d3\":\"Header_d3__17wEH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sectionTitle\":\"Truth_sectionTitle__1j3zU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"placeArea\":\"Area_placeArea__ZIr7r\",\"nav\":\"Area_nav__3TUAZ\",\"add\":\"Area_add__R2VO1\",\"blue\":\"Area_blue__2L3Nq\",\"index\":\"Area_index__1bfF2\",\"activeIndex\":\"Area_activeIndex__3PaE_\",\"uchi\":\"Area_uchi__3WsF6\",\"tips\":\"Area_tips__19Vwh\",\"abroad\":\"Area_abroad__TfUWh\",\"no_sharp\":\"Area_no_sharp__1RKRr\",\"up_tips\":\"Area_up_tips__17LEM\",\"datas\":\"Area_datas__22gIK\",\"moveNavLast\":\"Area_moveNavLast__2gX--\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"news\":\"Trace_news__299yZ\",\"titleWarp\":\"Trace_titleWarp__kmy79\",\"sectionTitle\":\"Trace_sectionTitle__clbIH\",\"hotzhuizhong\":\"Trace_hotzhuizhong__2OJVB\",\"timelineMore\":\"Trace_timelineMore__3XETK\",\"timeLine\":\"Trace_timeLine__33G3o\",\"singleNew\":\"Trace_singleNew__38aDd\",\"timeIcon\":\"Trace_timeIcon__k6jz_\",\"times\":\"Trace_times__n5_n8\",\"pass\":\"Trace_pass__1CBV4\",\"newest\":\"Trace_newest__zVEzN\",\"newsBox\":\"Trace_newsBox__3HCIV\",\"title\":\"Trace_title__3aW-Q\",\"desc\":\"Trace_desc__1dzhJ\",\"source\":\"Trace_source__3dByb\"};","import axios from 'axios';\r\nimport jsonp from 'jsonp';\r\nimport {TruthType} from '../utils/types'\r\n\r\n\r\n\r\nconst factHost = '//fact.txxg.jasonandjay.com'; // '/fact'\r\nconst apiHost = '//api.txxg.jasonandjay.com'; // '/api'\r\nconst wechatHost = '//wechat.txxg.jasonandjay.com'; // '/fact'\r\nconst inewsHost = 'https://view.inews.qq.com'; // '/fact'\r\n\r\n\r\n// 获取全国省份列表\r\nexport const getHospitalProvince = ()=>{\r\n    return axios.post(`${wechatHost}/api/THPneumoniaService/getHospitalProvince`,{\r\n        service: 'THPneumoniaOuterService',\r\n        args: {req:{}},\r\n        func: 'getHospitalProvince',\r\n        context: {channel: 'AAEEviDRbllNrToqonqBmrER'}\r\n    })\r\n}\r\n\r\n\r\n// 获取全国医院列表\r\nexport const getHospital = (arr:string)=>{\r\n    return axios.post(`${wechatHost}/api/THPneumoniaService/getHospitalCityByProvince`,{\r\n        service: 'THPneumoniaOuterService',\r\n        args: {req:{province:arr}},\r\n        func: 'getHospitalCityByProvince',\r\n        context: {channel: 'AAEEviDRbllNrToqonqBmrER'}\r\n    })\r\n}\r\n\r\n// 获取分页辟谣信息列表\r\nexport const getTruth = (params: TruthType = {page:0})=>{\r\n    return new Promise((resolve, reject)=>{\r\n        jsonp(`${factHost}/loadmore?page=${params.page}`, {}, (err, data)=>{\r\n            if (err){\r\n                reject(err)\r\n            }else{\r\n                resolve(data)\r\n            }\r\n        })\r\n    })\r\n}\r\n\r\n// 获取疫情最新进展\r\nexport const getTrace = ()=>{\r\n    return new Promise((resolve, reject)=>{\r\n        jsonp(`${inewsHost}/g2/getOnsInfo?name=wuwei_ww_time_line`, {}, (err, data)=>{\r\n            if (err){\r\n                reject(err)\r\n            }else{\r\n                resolve(data)\r\n            }\r\n        })\r\n    })\r\n}\r\n\r\n// 最新疫情数据\r\nexport const getDisease = ()=>{\r\n    return new Promise((resolve, reject)=>{\r\n        jsonp(`${inewsHost}/g2/getOnsInfo?name=disease_h5`, {}, (err, data)=>{\r\n            if (err){\r\n                reject(err)\r\n            }else{\r\n                resolve(data)\r\n            }\r\n        })\r\n    })\r\n}\r\n// 省份疫情防治列表\r\n\r\nexport const getProvinceNews = (code: string)=>{\r\n    return axios.get(`${apiHost}/news/v1/province/news/list?province_code=`+code);\r\n}\r\n\r\n","import React, { useState, useEffect } from 'react'\r\nimport { TotalType } from '../utils/types'\r\nimport styles from './Header.module.scss'\r\n\r\n\r\nconst Hospital = (props: { total: TotalType }) => {\r\n    console.log('！！！！！！！！！！', props.total)\r\n    let t1 =props.total&&props.total.lastUpdateTime\r\n    let startDate: any=new Date(t1&&t1.replace(/-/g, \"/\"))\r\n    let endDate: any =new Date()\r\n    let dateDiff =endDate.getTime() - startDate.getTime() //获取时间差毫秒\r\n    let hourLevel = dateDiff % (24 * 60 * 60 * 1000)\r\n    let minutesLevel = hourLevel % (60 * 60 * 1000)\r\n    let minutes = Math.floor(minutesLevel / (60 * 1000))\r\n    // console.log(props.total.lastUpdateTime)\r\n    return <>\r\n        <div>\r\n            {\r\n                <>\r\n                   <img className={styles.imgs} src=\"https://mat1.gtimg.com/news/images/inews/2020/feiyan/18/img/top_headv3.png\" alt=\"\" />\r\n                      {\r\n                          props.total&&\r\n                      <p className={styles.f}>统计截至<span>{props.total.lastUpdateTime}</span>更新于<span>{minutes}</span>分钟前</p>\r\n                      }\r\n                          <div>\r\n                      {\r\n                        props.total&&\r\n                        <>\r\n                      <div className={styles.box}>\r\n                         <dl>\r\n                             <dt className={styles.a}><div>较上日<span>   <span className={styles.a2}>+{props.total.chinaAdd.confirm}</span></span> </div></dt>\r\n                             <dd className={styles.a}><span className={styles.a3}>{props.total.chinaTotal.confirm}</span></dd>\r\n                             <p className={styles.a1}>全国确诊</p>\r\n                         </dl>\r\n                         <dl>\r\n                             <dt className={styles.b}><span>较上日</span> <span className={styles.b2}>+{props.total.chinaAdd.suspect}</span> </dt>\r\n                             <dd className={styles.b}><span className={styles.b3}>{props.total.chinaTotal.suspect}</span> </dd>\r\n                             <p className={styles.b1}>疑似病例</p>\r\n                         </dl>\r\n                         <dl>\r\n                             <dt className={styles.c}><span>较上日</span> <span className={styles.c2}>+{props.total.chinaAdd.heal}</span></dt>\r\n                             <dd className={styles.c}><span className={styles.c3}>{props.total.chinaTotal.heal}</span> </dd>\r\n                             <p className={styles.c1}>治愈人数</p>\r\n                         </dl>\r\n                         <dl>\r\n                             <dt className={styles.d}><span>较上日</span> <span className={styles.d2}>+{props.total.chinaAdd.dead}</span></dt>\r\n                             <dd className={styles.d}><span className={styles.d3}>{props.total.chinaTotal.dead}</span></dd>\r\n                             <p className={styles.d1}>死亡人数</p>\r\n                         </dl>\r\n                      </div>\r\n                      </>\r\n                     }\r\n                </div>\r\n                </>\r\n            }\r\n        </div>\r\n    </>\r\n}\r\n\r\n\r\nexport default Hospital\r\n","import React, {useState, useEffect} from 'react'\r\nimport {AreaType} from '../utils/types'\r\nimport styles from './Area.module.scss'\r\nconst Area = (props: {areaTree:AreaType []})=>{\r\n    console.log('area...', props.areaTree);\r\n    // let data=props.areaTree.length?props.areaTree[0].children as AreaType[]:[] \r\n    let [data,setData] = useState<AreaType[]>([])\r\n    const expandProvince = (index: number)=>{\r\n        console.log(index)\r\n        // let newData = [...data];\r\n        // newData[index].active = !data[index].active;\r\n        // setData(newData)\r\n    }\r\n    let arr=0\r\n    props.areaTree.slice(1).map((item,index)=>{\r\n      arr+=item.total.confirm\r\n    })\r\n    let drr=0\r\n    props.areaTree.slice(1).map((item,index)=>{\r\n      drr+=item.total.dead\r\n    })\r\n    return <>\r\n        <div className={styles.chianList}>\r\n           <div className={styles.uchi}>\r\n           中国疫情（包括港澳台）\r\n           <span className={styles.tips}>7:00-10:00为更新高峰，数据如有滞后请谅解。</span>\r\n           </div>\r\n           <div className={styles.nav}>\r\n              <h2 className={styles.add}>地区</h2>\r\n              <div className={styles.add}>新增确诊</div>\r\n              <div>累计确诊</div>\r\n              <div>治愈</div>\r\n              <div>死亡</div>\r\n           </div>\r\n           {\r\n              (props.areaTree.length?props.areaTree[0].children as AreaType[]:[]).map((item,index)=>{\r\n                   return <div key={index}>\r\n                   <div className={styles.placeArea} onClick={()=>expandProvince(index)}>\r\n                         <h2 className={styles.add}>{item.name}</h2>\r\n                         <div className={styles.blue}>{item.today.confirm}</div>\r\n                         <div>{item.total.confirm}</div>\r\n                         <div>{item.total.heal}</div> \r\n                         <div>{item.total.dead}</div> \r\n                   </div>\r\n                   <div className={item.active?styles.activeIndex:styles.index}>\r\n                   {\r\n                    (item.children as AreaType[]).map((val,ind)=>{\r\n                         return <div key={ind} className={styles.placeArea}>\r\n                               <h2>{val.name}</h2>\r\n                               <div>{val.today.confirm}</div>\r\n                               <div>{val.total.confirm}</div>\r\n                               <div>{val.total.heal}</div> \r\n                               <div>{val.total.dead}</div> \r\n                         </div>\r\n                     })\r\n                   }\r\n                   </div>\r\n                   </div>\r\n               })\r\n           }\r\n        </div>\r\n        <div className={styles.moveNavLast}>\r\n          <span>数据来源：各地卫健委每日公开数据</span>\r\n        </div>\r\n        <div className={styles.abroadList}>\r\n          <div className={styles.up_tips}>\r\n              海外疫情 \r\n              <span className={styles.datas}>\r\n                确诊\r\n                <span className={styles.hw_confirm}>{arr}</span>\r\n              例，死亡\r\n              <span className={styles.hw_dead}>{drr}</span>\r\n              例\r\n                </span>\r\n          </div>     \r\n          <div className={styles.abroad}>\r\n              <h2 className={styles.add}>地区</h2>\r\n              <div>确诊</div>\r\n              <div>治愈</div>\r\n              <div>死亡</div>\r\n          </div>\r\n        {\r\n         props.areaTree.slice(1).map((item,index)=>{\r\n            return <div key={index} className={styles.no_sharp}>\r\n                 <h2 className={styles.add}>{item.name}</h2>\r\n                 <div>{item.total.confirm}</div>\r\n                 <div>{item.total.heal}</div>\r\n                 <div>{item.total.dead}</div>\r\n            </div>  \r\n         })   \r\n        }\r\n        </div>\r\n    </>\r\n}\r\n\r\n\r\nexport default Area","import React, {useState, useEffect} from 'react'\r\nimport {getTrace} from '../services/index'\r\nimport styles from './Trace.module.scss'\r\ninterface TraceType{\r\n    time: string,\r\n    create_time: string,\r\n    source: string,\r\n    desc: string,\r\n    title: string\r\n}\r\n\r\nconst Trace = ()=>{\r\n    // 定义最新进展\r\n    let [trace, setTrace] = useState<TraceType[]>([]);\r\n\r\n    // 获取最新进展数据\r\n    useEffect(()=>{\r\n        getTrace().then((res:any)=>{\r\n            let data = JSON.parse(res.data) as TraceType[];\r\n            data.sort((a, b)=>{\r\n                if (a.time > b.time){\r\n                    return -1;\r\n                }else{\r\n                    return 1;\r\n                }\r\n            })\r\n            setTrace(data);\r\n        })\r\n    }, []);\r\n    \r\n    console.log('trace...', trace);\r\n    return <div className={styles.news}>\r\n       <div className={styles.titleWarp}>\r\n            <div className={styles.sectionTitle}>最新进展\r\n                <div className={styles.hotzhuizhong}>\r\n                    <div>\r\n                        <span className={styles.timelineMore}></span>\r\n                    </div>\r\n                </div>    \r\n            </div>\r\n        </div>\r\n            <div className={styles.timeLine}></div>\r\n            {\r\n                trace.slice(0,10).map((item,index)=>{\r\n                    return <div className={styles.singleNew} key={index}>\r\n                                <div className={styles.timeIcon}></div>                   \r\n                                <div className={styles.times} >\r\n                                    {/* 时间 */}\r\n                                    <span className={styles.pass}>{item.time}</span>\r\n                                    <div className={styles.newest}></div>\r\n                                </div>                                  \r\n                                    <div className={styles.newsBox}>\r\n                                        {/* 标题 */}\r\n                                        <div className={styles.title}>{item.title}</div>\r\n                                        {/* 内容 */}\r\n                                        <div className={styles.desc}>{item.desc}</div>\r\n                                        {/* 来源 */}\r\n                                        <div className={styles.source}>来源：{item.source}</div>\r\n                                    </div>                 \r\n                            </div>\r\n                })\r\n            }           \r\n    </div>\r\n}\r\n\r\n\r\nexport default Trace","import React, {useState, useEffect} from 'react'\r\nimport {getHospitalProvince,getHospital} from '../services/index'\r\n\r\nimport styles from './Hospital.module.scss'\r\n\r\ninterface ProType {\r\n    provinceName: string\r\n    citys: any[],\r\n    cityCnt: number,\r\n    active?: boolean,\r\n}\r\n\r\n\r\ninterface cityType {\r\n  provinceName: string\r\n  cityCode:string,\r\n  cityName:string,\r\n  count:number\r\n}\r\n\r\nconst Hospital = ()=>{\r\n    // 定义全国数据\r\n    let [provinces, setProvinces] = useState<ProType[]>([]);\r\n    let [data, setdata] = useState<cityType[]>([]);\r\n \r\n    // 获取全国数据\r\n    useEffect(()=>{\r\n        getHospitalProvince().then((res:any)=>{\r\n        res = res.data;\r\n        if(res.code == 0){\r\n            setProvinces(res.args.rsp.provinces);\r\n        }\r\n        })\r\n    }, []);\r\n    \r\n\r\n       // 获取全国医院数据\r\n     useEffect(()=>{\r\n        getHospital('北京').then((res:any)=>{\r\n        res = res.data;\r\n        if(res.code == 0){\r\n            setdata(res.args.rsp.info.citys);\r\n            console.log(res,'222')\r\n        }\r\n        })\r\n    }, []);\r\n\r\n\r\n    \r\n    const expandProvince = (index: number,provinceName:string)=>{\r\n        let newProvinces = [...provinces];\r\n        newProvinces[index].active = !provinces[index].active;\r\n        setProvinces(newProvinces)\r\n        getHospital(provinceName).then((res:any)=>{\r\n            res = res.data;\r\n            if(res.code == 0){\r\n                setdata(res.args.rsp.info.citys);\r\n                console.log(res,'222')\r\n            }\r\n        })\r\n        console.log(provinceName,'555555555')\r\n      \r\n    }\r\n    const TransitionEvent=(item: cityType,index:number)=>{\r\n        //  console.log('111')\r\n        if(item){\r\n            console.log(item)\r\n            \r\n        }\r\n    }\r\n    return <>\r\n        <div className={styles.sectionTitle}>医疗救治医院查询\r\n          <div className={styles.healthIcon}></div>\r\n        </div>\r\n        <div className={styles.hospital}>{\r\n            provinces.map((item, index)=>{\r\n                return <div className={styles.hotelItemWrap} key={index} >\r\n                <div className={styles.hotelProvince} onClick={()=>expandProvince(index,item.provinceName)} >\r\n                    <div className={styles.name}>{item.provinceName}</div>\r\n                    <div className={item.active?styles.activeCount:styles.count} >\r\n                    </div>\r\n                </div>\r\n                <div className={item.active?styles.activeIndex:styles.index} >\r\n                    {\r\n                            data.map((item,index)=>{\r\n                                return(\r\n                                    <div key={index} className={styles.hotelCity} onClick={()=>TransitionEvent(item,index)}>\r\n                                       <span className={styles.name}>{item.cityName}</span> \r\n                                       <span >{item.count}家<span>进入查询</span></span>\r\n                                    </div>\r\n                                )\r\n                            })\r\n                        }\r\n                    </div>\r\n             </div>\r\n            })\r\n        }</div>\r\n    </>\r\n}\r\n\r\n\r\nexport default Hospital\r\n","import React, {useState, useEffect} from 'react'\r\nimport {getTruth} from '../services/index'\r\nimport styles from './Truth.module.scss'\r\ninterface ProType {\r\n    provinceName: string\r\n    citys: any[],\r\n    cityCnt: number\r\n}\r\n\r\nconst Truth = ()=>{\r\n    // 定义全国医院数据\r\n    let [truth, setTruth] = useState([]);\r\n\r\n    // 获取全国医院数据\r\n    useEffect(()=>{\r\n        getTruth().then((res:any)=>{\r\n            console.log('辟谣信息', res);\r\n            // res = res.data;\r\n            // if(res.code == 0){\r\n            //     setProvinces(res.args.rsp.provinces);\r\n            // }\r\n        })\r\n    }, []);\r\n    \r\n    return <>\r\n        <span className={styles.sectionTitle}>\r\n            辟谣信息\r\n        </span>\r\n    </>\r\n}\r\n\r\n\r\nexport default Truth","import React from 'react'\r\nimport styles from './Tip.module.scss'\r\n\r\nconst Tip = () => {\r\n\r\n    return <div>\r\n        <h3>新型肺炎预防须知</h3>\r\n        <div className={styles.box}>\r\n            <div className={styles.lrr}>\r\n                <img className={styles.fanghu_icon} src=\"https://puui.qpic.cn/vupload/0/1580113954413_67dj6qw9r34.png/0\" />\r\n                <span className={styles.fanghu_title}>个人清洁</span>\r\n            </div>\r\n            <div className={styles.lr}>\r\n                <div>\r\n                    <div className={styles.fanghu_item_point}></div>\r\n                    <div className={styles.fanghu_item_text}>经常保持双手清洁，尤其在触摸口、鼻或眼之前。</div>\r\n                </div>\r\n                <div>\r\n                    <div className={styles.fanghu_item_point}></div>\r\n                    <div className={styles.fanghu_item_text}>经常用洗手液和清水清洗双手，搓手最少20秒，并用纸巾擦干。</div>\r\n                </div>\r\n                <div>\r\n                    <div className={styles.fanghu_item_point}></div>\r\n                    <div className={styles.fanghu_item_text}>打喷嚏或咳嗽时应用纸巾掩盖口鼻，把用过的纸巾弃置于有盖垃圾箱内，然后彻底清洁双手。</div>\r\n                </div>\r\n                <div className={styles.rr}>\r\n                    <img className={styles.fanghu_icon} src=\"https://puui.qpic.cn/vupload/0/1580113954413_b3dr1w759hr.png/0\" />\r\n                    <span className={styles.fanghu_title}>尽量避免</span>\r\n                </div>\r\n                <div>\r\n                    <div className={styles.fanghu_item_point}></div>\r\n                    <div className={styles.fanghu_item_text}>减少前往人流密集的场所。如不可避免，应戴上外科口罩。</div>\r\n                </div>\r\n                <div>\r\n                    <div className={styles.fanghu_item_point}></div>\r\n                    <div className={styles.fanghu_item_text}>避免到访医院。如有必要到访医院，应佩戴外科口罩及时刻注重个人和手部卫生。</div>\r\n                </div>\r\n                <div>\r\n                    <div className={styles.fanghu_item_point}></div>\r\n                    <div className={styles.fanghu_item_text}>避免接触动物（包括野味）、禽鸟或其粪便；避免到海鲜、活禽市场或农场。</div>\r\n                </div>\r\n                <div>\r\n                    <div className={styles.fanghu_item_point}></div>\r\n                    <div className={styles.fanghu_item_text}>切勿进食野味及切勿光顾有提供野味的餐馆。</div>\r\n                </div>\r\n                <div>\r\n                    <div className={styles.fanghu_item_point}></div>\r\n                    <div className={styles.fanghu_item_text}>注意食物安全和卫生，避免进食或饮用生或未熟透的动物产品，包括奶类、蛋类和肉类。</div>\r\n                </div>\r\n                <div className={styles.rr}>\r\n                    <img className={styles.fanghu_icon} src=\"https://puui.qpic.cn/vupload/0/1580113954413_qs8jz3v8m7.png/0\" />\r\n                    <span className={styles.fanghu_title}>尽快就诊</span>\r\n                </div>\r\n                <div className={styles.fanghu_item}>\r\n                    <div className={styles.fanghu_item_point}></div>\r\n                    <div className={styles.fanghu_item_text}>如有身体不适，特别是有发烧或咳嗽，应戴上外科口罩并尽快就诊。</div>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    </div>\r\n}\r\nexport default Tip\r\n","import React, { useState, useEffect } from 'react'\r\nimport {getProvinceNews} from '../services/index'\r\nimport {AreaType,ItemTypes} from '../utils/types'\r\nimport styles from './News.module.scss'\r\ninterface ProvinceType{\r\n    [key: string]: string\r\n}\r\ninterface ItemType{\r\n    \"title\": string,\r\n    \"publish_time\": string,\r\n    \"news_url\": string,\r\n    \"cms_id\": string\r\n}\r\n\r\nconst ProvinceList:ProvinceType = {\r\n    \"hb\": \"湖北\",\r\n    \"zj\": \"浙江\",\r\n    \"gd\": \"广东\",\r\n    \"henan\": \"河南\",\r\n    \"hn\": \"湖南\",\r\n    \"ah\": \"安徽\",\r\n    \"jiangxi\": \"江西\",\r\n    \"cq\": \"重庆\",\r\n    \"jiangsu\": \"江苏\",\r\n    \"cd\": \"四川\",\r\n    \"sd\": \"山东\",\r\n    \"bj\": \"北京\",\r\n    \"sh\": \"上海\",\r\n    \"fj\": \"福建\",\r\n    \"heilongjiang\": \"黑龙江\",\r\n    \"xian\": \"陕西\",\r\n    \"guangxi\": \"广西\",\r\n    \"hebei\": \"河北\",\r\n    \"yn\": \"云南\",\r\n    \"hainan\": \"海南\",\r\n    \"ln\": \"辽宁\",\r\n    \"shanxi\": \"山西\",\r\n    \"tj\": \"天津\",\r\n    \"guizhou\": \"贵州\",\r\n    \"gansu\": \"甘肃\",\r\n    \"jilin\": \"吉林\",\r\n    \"neimenggu\": \"内蒙古\",\r\n    \"ningxia\": \"宁夏\",\r\n    \"xinjiang\": \"新疆\",\r\n    \"hk\": \"香港\",\r\n    \"qinghai\": \"青海\",\r\n    \"taiwan\": \"台湾\",\r\n    \"macau\": \"澳门\",\r\n    \"xizang\": \"西藏\"\r\n}\r\n\r\n\r\nconst News = (props: {areaTree: AreaType[]}) => {\r\n    let [province, setProvince] = useState<string>('hb');\r\n    let [items, setItems] = useState<ItemType []>([])\r\n\r\n    let changeArea = (e:React.ChangeEvent<HTMLSelectElement>)=>{\r\n        setProvince(e.target.value);\r\n        getNews();\r\n    }\r\n\r\n    useEffect(()=>{\r\n        getNews();\r\n    }, [])\r\n\r\n    const getNews = ()=>{\r\n        console.log('11111111111111555555')\r\n        getProvinceNews(province).then((res:any)=>{\r\n            res = res.data;\r\n            console.log('101',res)\r\n            if (res.errno === 0){\r\n                setItems(res.data.items);\r\n            }\r\n         \r\n        })\r\n    }\r\n\r\n    \r\n    console.log('news...', items, 'lyp',props.areaTree);\r\n\r\n    let curIndex = props.areaTree.findIndex(item=>item.name === ProvinceList[province]);\r\n    console.log('qqq',curIndex)\r\n    let curPro = props.areaTree[curIndex];\r\n    console.log('www',curPro)\r\n    let curPoo = items\r\n    console.log('eee',curPoo)\r\n    // 拼接各省份选项\r\n    const provinceHtml = [];\r\n    for (let key in ProvinceList){\r\n        provinceHtml.push(<option key={ProvinceList[key]} value={key}>{ProvinceList[key]}</option>);\r\n    }\r\n    return <div className={styles.wrap}>\r\n        <div className={styles.box}>\r\n            <h3>\r\n                <span className={styles.tit}>{ProvinceList[province]}</span>\r\n                疫情速报\r\n            </h3>\r\n            <select id=\"select-area\" onChange={(e:React.ChangeEvent<HTMLSelectElement>)=>changeArea(e)}>\r\n                <option className={styles.q} value=\"hb\">≒切换城市</option>\r\n                {provinceHtml}\r\n            </select>\r\n        </div>\r\n        <div className={styles.num}>\r\n            <li>\r\n                <span className={styles.l1}>{curPro && curPro.today.confirm}</span>\r\n                <br/>\r\n                <span>新增确诊</span>\r\n            </li>\r\n            <li>\r\n                <span className={styles.l2}>{curPro && curPro.total.confirm}</span>\r\n                <br/>\r\n                <span>累计确诊</span>\r\n            </li>\r\n            <li>\r\n                <span className={styles.l3}>{curPro && curPro.total.heal}</span>\r\n                <br/>\r\n                <span>治愈人数</span>\r\n            </li>\r\n            <li>\r\n                <span className={styles.l4}>{curPro && curPro.total.dead}</span>\r\n                <br/>\r\n                <span>死亡人数</span>\r\n            </li>\r\n        </div>\r\n        <div>\r\n              {\r\n                  curPoo.map((item,index)=>{\r\n                      return(\r\n                          <div key={index} className={styles.k}>\r\n                                 <span className={styles.kx}>{item.title}</span>\r\n                          </div>\r\n                      )\r\n                  })\r\n              }\r\n             \r\n        </div>\r\n        <div className={styles.tabsharebox} >\r\n            <div className={styles.tabsharebtn} id=\"tab-share-btn\">分享<span className=\"tab-name share-tab-name taplist-btn\">湖北</span>数据</div>\r\n            <div className={styles.tabsharebtn} id=\"tab-look-btn\">关注<span className=\"tab-name btn-tab-name taplist-btn\">湖北</span>疫情\r\n            </div>\r\n          </div>\r\n    </div>\r\n}\r\n\r\n\r\nexport default News","    \r\nimport React, {useState, useEffect} from 'react'\r\nimport {\r\n    Chart,\r\n    Geom,\r\n    Axis,\r\n    Tooltip,\r\n    // Legend,\r\n  } from \"bizcharts\";\r\n\r\ninterface ProType {\r\n    chinaDayAddList: Array<{\r\n        date: string,\r\n        confirm: string,\r\n        suspect: string,\r\n        dead: string,\r\n        heal: string\r\n    }>,\r\n    chinaDayList: Array<{\r\n        date: string,\r\n        confirm: string,\r\n        suspect: string,\r\n        dead: string,\r\n        heal: string\r\n    }>\r\n}\r\n\r\nconst Hospital = (props: ProType)=>{\r\n    console.log('props...', props);\r\n    // debugger;\r\n\r\n    const scale = {\r\n        value: {\r\n            type: 'linear',\r\n        }\r\n    }\r\n    let dayAddList:Array<{}> = [], dayList:Array<{}> = [], dayDeadList:Array<{}> = [];\r\n    props.chinaDayAddList.forEach(item=>{\r\n        dayAddList.push({\r\n            date:item.date,\r\n            type: '确诊人数',\r\n            value: item.confirm\r\n        },{\r\n            date:item.date,\r\n            type: '疑似人数',\r\n            value: item.suspect\r\n        })\r\n    })\r\n    props.chinaDayList.forEach(item=>{\r\n        dayList.push({\r\n            date:item.date,\r\n            type: '确诊人数',\r\n            value: item.confirm\r\n        },{\r\n            date:item.date,\r\n            type: '疑似人数',\r\n            value: item.suspect\r\n        })\r\n        dayDeadList.push({\r\n            date:item.date,\r\n            type: '治愈人数',\r\n            value: item.heal\r\n        },{\r\n            date:item.date,\r\n            type: '死亡人数',\r\n            value: item.dead\r\n        })\r\n    })\r\n    return <>\r\n        {/* 疫情新增趋势（人） */}\r\n        <section>\r\n            <h4>&emsp;&emsp;&emsp;疫情新增趋势（人）</h4>\r\n            <Chart height={259} data={dayAddList} scale={scale} forceFit>\r\n             \r\n                <Axis name=\"date\"\r\n                    label={{\r\n                        formatter: val =>{\r\n                            let arr = val.slice(1).split('.');\r\n                            return `${arr[0]}-${arr[1]}`\r\n                        } \r\n                    }}\r\n                />\r\n                <Tooltip crosshairs={{type: \"y\"}}/>\r\n                <Geom\r\n                    type=\"line\"\r\n                    position=\"date*value\"\r\n                    size={2}\r\n                    color=\"type\"\r\n                    shape={\"smooth\"}\r\n                />\r\n                <Geom\r\n                    type=\"point\"\r\n                    position=\"date*value\"\r\n                    size={4}\r\n                    color=\"type\"\r\n                    style={{\r\n                        stroke: \"#fff\",\r\n                        lineWidth: 1\r\n                    }}\r\n                />\r\n            </Chart>\r\n        </section>\r\n        {/* 累计确诊疑似趋势（人） */}\r\n        <section>\r\n        <h4>&emsp;&emsp;&emsp;累计确诊疑似趋势（人）</h4>\r\n            <Chart height={259} data={dayList} scale={scale} forceFit>\r\n               \r\n                <Axis name=\"date\"\r\n                    label={{\r\n                        formatter: val =>{\r\n                            let arr = val.slice(1).split('.');\r\n                            return `${arr[0]}-${arr[1]}`\r\n                        } \r\n                    }}\r\n                />\r\n                <Tooltip crosshairs={{type: \"y\"}}/>\r\n                <Geom\r\n                    type=\"line\"\r\n                    position=\"date*value\"\r\n                    size={2}\r\n                    color=\"type\"\r\n                    shape={\"smooth\"}\r\n                />\r\n                <Geom\r\n                    type=\"point\"\r\n                    position=\"date*value\"\r\n                    size={4}\r\n                    color=\"type\"\r\n                    style={{\r\n                        stroke: \"#fff\",\r\n                        lineWidth: 1\r\n                    }}\r\n                />\r\n            </Chart>\r\n        </section>\r\n        {/* 累计治愈死亡趋势（人） */}\r\n        <section>\r\n        <h4>&emsp;&emsp;&emsp;疫情新增趋势</h4>\r\n            <Chart height={259} data={dayDeadList} scale={scale} forceFit>\r\n               \r\n                <Axis name=\"date\"\r\n                    label={{\r\n                        formatter: val =>{\r\n                            let arr = val.slice(1).split('.');\r\n                            return `${arr[0]}-${arr[1]}`\r\n                        } \r\n                    }}\r\n                />\r\n                <Tooltip crosshairs={{type: \"y\"}}/>\r\n                <Geom\r\n                    type=\"line\"\r\n                    position=\"date*value\"\r\n                    size={2}\r\n                    color=\"type\"\r\n                    shape={\"smooth\"}\r\n                />\r\n                <Geom\r\n                    type=\"point\"\r\n                    position=\"date*value\"\r\n                    size={4}\r\n                    color=\"type\"\r\n                    style={{\r\n                        stroke: \"#fff\",\r\n                        lineWidth: 1\r\n                    }}\r\n                />\r\n            </Chart>\r\n              <span>&emsp;&emsp;&emsp;&nbsp;\r\n                  数据来源：国家卫健委官网发布，每日更新一次\r\n              </span>\r\n        </section>\r\n        \r\n    </>\r\n}\r\n\r\n\r\nexport default Hospital","import React, { useEffect } from 'react'\r\nimport { getHospitalProvince } from '../services/index'\r\n\r\ninterface PropType {\r\n    countryData: Array<{\r\n        name: string,\r\n        value: number\r\n    }>\r\n}\r\n\r\nconst Hospital = (props: PropType) => {\r\n    let that: any = window;\r\n    useEffect(() => {\r\n        new that.Highcharts.Map('map', {\r\n            colorAxis: {\r\n                dataClasses: [{\r\n                    color: '#FFEFD7',\r\n                    from: 1,\r\n                    name: '1-9人',\r\n                    to: 9\r\n                }, {\r\n                    color: '#FFD2A0',\r\n                    from: 10,\r\n                    name: '10-99人',\r\n                    to: 90\r\n                }, {\r\n                    color: '#FE8664',\r\n                    from: 100,\r\n                    name: '100-499人',\r\n                    to: 499\r\n                }, {\r\n                    color: '#E64B47',\r\n                    from: 500,\r\n                    name: '500-999人',\r\n                    to: 999\r\n                }, {\r\n                    color: '#C91014',\r\n                    from: 1000,\r\n                    name: '1000-9999人',\r\n                    to: 9999\r\n                }, {\r\n                    color: '#9C0A0D',\r\n                    from: 10000,\r\n                    name: '10000人以上'\r\n                }]\r\n            },\r\n            series: [{\r\n                data: props.countryData,\r\n                dataLabels: {\r\n                    enabled: true,\r\n                    format: '{point.name}'\r\n                },\r\n                name: '确诊',\r\n                mapData: that.Highcharts.maps['cn/china'],\r\n                joinBy: 'name' // 根据 name 属性进行关联\r\n            }]\r\n        });\r\n    }, [props.countryData]);\r\n\r\n    return <>\r\n        <div id=\"map\" style={{ width: '100%', height: '400px' }}></div>\r\n    </>\r\n}\r\n\r\n\r\nexport default Hospital","import React,{useState, useEffect} from 'react';\r\nimport './App.css';\r\nimport {TotalType, AreaType} from '../utils/types'\r\nimport {getDisease} from '../services/index'\r\n\r\n// 引入模块\r\nimport Header from '../components/Header'\r\nimport Area from '../components/Area'\r\nimport Trace from '../components/Trace'\r\nimport Hospital from '../components/Hospital';\r\nimport Truth from '../components/Truth';\r\nimport Tip from '../components/Tip';\r\nimport News from '../components/News';\r\nimport Chart from '../components/Chart';\r\nimport Map from '../components/Map';\r\n\r\n\r\nconst App = () => {\r\n  // 疫情概况\r\n  let [total, setTotal] = useState<TotalType>();\r\n  // 疫情区域分布\r\n  let [areaTree, setAreaTree] = useState<AreaType []>([]);\r\n  // 每日数据\r\n  let [dayList, setDayList] = useState([]);\r\n  // 每日新增数据\r\n  let [dayAddList, setDayAddList] = useState([]);\r\n  // 全国疫情分布\r\n  let [countryData, setCountryData] = useState([]);\r\n\r\n\r\n  // 请求疫情数据\r\n  useEffect(()=>{\r\n    getDisease().then((res:any)=>{\r\n      res = JSON.parse(res.data);\r\n      console.log('res...', res);\r\n      let {chinaTotal, chinaAdd, lastUpdateTime, areaTree, chinaDayList, chinaDayAddList} = res;\r\n      // 赋值数据\r\n      setTotal({chinaTotal, chinaAdd, lastUpdateTime});\r\n      setAreaTree(areaTree);\r\n      setDayList(chinaDayList)\r\n      setDayAddList(chinaDayAddList);\r\n      let countryData = areaTree[0].children.map((item: any)=>{\r\n        return {\r\n          name: item.name,\r\n          value: item.total.confirm\r\n        }\r\n      })\r\n      setCountryData(countryData);\r\n    })\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      {/* 疫情概况 */}\r\n      <Header total={total as TotalType}/>\r\n      {/* 疫情分布地图展示 */}\r\n      <Map countryData={countryData}/>\r\n      {/* 图表显示疫情 */}\r\n      <Chart chinaDayAddList={dayAddList} chinaDayList={dayList}/>\r\n      {/* 疫情速报 */}\r\n      <News areaTree={areaTree.length?areaTree[0].children as AreaType[]:[]}/>\r\n      {/* 疫情区域分布 */}\r\n      <Area areaTree={areaTree}/>\r\n      {/* 疫情的最新进展 */}\r\n      <Trace/>\r\n      {/* 辟谣信息 */}\r\n      <Truth/>\r\n      {/* 医疗救治医院查询 */}\r\n      <Hospital/>\r\n      {/* 防护须知 */}\r\n      <Tip/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './views/App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tit\":\"News_tit__38KDn\",\"wrap\":\"News_wrap__Nd3-I\",\"box\":\"News_box__1DOoM\",\"num\":\"News_num__2ALNa\",\"l1\":\"News_l1__waQ8k\",\"l2\":\"News_l2__s0WFx\",\"l3\":\"News_l3__pgyQD\",\"l4\":\"News_l4__2npKA\",\"k\":\"News_k__2xEX1\",\"kx\":\"News_kx__R4KSY\",\"tabsharebox\":\"News_tabsharebox__3l3ao\",\"tabsharebtn\":\"News_tabsharebtn__1cnI-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sectionTitle\":\"Hospital_sectionTitle__38fV7\",\"healthIcon\":\"Hospital_healthIcon__2Af_A\",\"hospital\":\"Hospital_hospital__GYI5g\",\"hotelItemWrap\":\"Hospital_hotelItemWrap__NHxgn\",\"hotelProvince\":\"Hospital_hotelProvince__3legZ\",\"name\":\"Hospital_name__1vv_h\",\"count\":\"Hospital_count__276VA\",\"activeCount\":\"Hospital_activeCount__2jEKQ Hospital_count__276VA\",\"index\":\"Hospital_index__3ylxC\",\"activeIndex\":\"Hospital_activeIndex__3M7y2\",\"hotelCity\":\"Hospital_hotelCity__1aEpY\"};"],"sourceRoot":""}